QUERIES RESTAURANT NOVA YORK MONGODB

1- db.restaurant.find()
2- db.restaurant.find({},{restaurant_id:1,name:1,borough:1,cuisine:1})
3- db.restaurant.find({},{restaurant_id:1,name:1,borough:1,cuisine:1,_id:0})
4- db.restaurant.find({},{restaurant_id:1,name:1,borough:1,"address.zipcode":1,_id:0})
5- db.restaurant.find({borough:"Bronx"})
6- db.restaurant.find({borough:"Bronx"}).limit(5)
7- db.restaurant.find({borough:"Bronx"}).skip(5).limit(5)
8- db.restaurant.find({"grades.score": { $gt: 90}})
9- db.restaurant.find({"grades.score": {$gt:90, $lt:100}})
10- db.restaurant.find({"address.coord.0" : {$eq : -95.754168}})
11- db.restaurant.find({$and:[{cuisine: {$ne:"American"}}, {"grades.score": { $gt: 90}},{"address.coord.0" : {$lt : -65.754168}}]})
12- db.restaurant.find({"cuisine": {$ne:"American"},"grades.score": { $gt: 90},"address.coord.0" : {$lt : -65.754168}})
13- db.restaurant.find({$and:[{"cuisine":{$ne : "american"}},{"grades.grade":"A"},{"borough":{$ne:"Brooklyn"}}]},{name:1,cuisine:1}).sort({ cuisine: -1 })

TENINT EN COMPTE QUE CUISINE AMERICAN TÃ‰ UN ESPAI DARRERA EL NOM! (ERROR VIST PER LA SUSSANA)
13bis - restaurant_NY> db.restaurant.find({$and:[{cuisine: {$not:/American/}}, {"grades.score": { $gt: 90}},{"address.coord.0" : {$lt : -65.754168}}]})

14- db.restaurant.find({name: /^Wil/i},{restaurant_id:1,name:1,borough:1,cuisine:1})
15- db.restaurant.find({name:/ces$/i},{restaurant_id:1,name:1,borough:1,cuisine:1})
16- db.restaurant.find({name:/Reg/},{restaurant_id:1,name:1,borough:1,cuisine:1})
17- db.restaurant.find({$and:[{borough: {$eq:"Bronx"}},{cuisine:{$in:["American","Chinese"]}}]})
18- db.restaurant.find({borough:{$in:["Staten Island","Queens","Bronx","Brooklyn"]}},	{restaurant_id:1,name:1,borough:1,cuisine:1})
19- db.restaurant.find({borough:{$nin:["Staten Island","Queens","Bronx","Brooklyn"]}},	{restaurant_id:1,name:1,borough:1,cuisine:1})
20- db.restaurant.find({"grades.score": { $lte: 10}}	,{restaurant_id:1,name:1,borough:1,cuisine:1})
21- db.restaurant.find({$and:[{cuisine:{$nin:["American","Chinese"]}},{name: /^Wil/i}]},{restaurant_id:1,name:1,borough:1,cuisine:1}})
22- db.restaurant.find({$and: [{"grades.grade" : {$eq : "A"}},{"grades.date" : {$eq : ISODate("2014-08-11T00:00:00Z")}},{"grades.score" : {$eq : 11}}]},{restaurant_id:1,name:1,grades:1})
23- db.restaurant.find({$and: [{"grades.1.grade" : {$eq : "A"}},{"grades.1.date" : {$eq : ISODate("2014-08-11T00:00:00Z")}},{"grades.1.score" : {$eq : 9}}]},{restaurant_id:1,name:1,grades:1})
24- db.restaurant.find({$and:[{"address.coord.1" : {$gt : 42}},{"address.coord.1" : {$lt : 52}}]},{restaurant_id:1,name:1,address:1})
25- db.restaurant.find().sort({name:1})
26- db.restaurant.find().sort({name:-1})
27- db.restaurant.find().sort({cuisine:1, borough:1})
28- db.restaurant.find({"address.street" : {$not : /street/i }},{address:1})
29- db.restaurant.find({"address.coord": { $type: "double" }})
31- db.restaurant.find({name:/mon/},{name:1,borough:1,cuisine:1,"address.coord":1})
32- db.restaurant.find({name:/^Mad/},{name:1,borough:1,cuisine:1,"address.coord":1})

NOT WORKING
PATH COLLISION
24- db.restaurant.find({$and:[{"address.coord.1":{$gt: 42}},{"address.coord.1":{$gt: 52}}]},{restaurant_id:1,name:1,address:1,"address.coord":1})
UNKOWN
30- db.restaurant.find({"grades.grade": {$eq: {$divide:["grades.score",0]}}},{restaurant_id:1,name:1,grades:1})













